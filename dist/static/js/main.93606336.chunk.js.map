{"version":3,"sources":["Components/Layout/SignedInLinks.js","Store/Actions/authActions.js","Components/Layout/SignedOutLinks.js","Components/Layout/Navbar.js","Components/Dashboard/Notifications.js","Components/Project/ProjectSummary.js","Components/Project/ProjectList.js","Components/Dashboard/Dashboard.js","Components/Project/ProjectDetails.js","Components/Auth/SignIn.js","Components/Auth/SignUp.js","Components/Project/CreateProject.js","Store/Actions/projectActions.js","App.js","serviceWorker.js","Store/Reducer/authReducer.js","Store/Reducer/projectReducer.js","Store/Reducer/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","console","log","links","uid","Layout_SignedInLinks","Layout_SignedOutLinks","Link","Notifications","notifications","map","notif","key","id","user","content","moment","time","toDate","fromNow","index_es","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Project_ProjectSummary","Dashboard","_this$props","this","Project_ProjectList","Dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authErr","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","objectSpread","Date","App","BrowserRouter","Layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93606336.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../Store/Actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n   return (\r\n\r\n      <ul className=\"right\">\r\n         <li><NavLink to='/create'>New project</NavLink></li>\r\n         <li><a onClick={props.signOut}>Log Out</a></li>\r\n         <li><NavLink to='/' className='btn btn-floating pink lightrn-1'>{props.profile.initials}</NavLink></li>\r\n      </ul>\r\n\r\n\r\n\r\n\r\n   )\r\n}\r\nconst mapDispatchToprops = (dispatch) => {\r\n   return {\r\n      signOut: () => dispatch(signOut())\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToprops)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {\r\n        getFirebase\r\n    }) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email, credentials.password\r\n        ).then(() => {\r\n            dispatch({\r\n                type: 'LOGIN_SUCCESS'\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'LOGIN_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {\r\n        getFirebase\r\n    }) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({\r\n                type: 'SIGNOUT_SUCCESSS'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {\r\n        getFirebase,\r\n        getFirestore\r\n    }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n\r\n        }).then(() => {\r\n            dispatch({\r\n                type: 'SIGNUP_SUCCESS'\r\n            })\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: 'SIGNUP_ERROR'\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n   return (\r\n\r\n      <ul className=\"right\">\r\n         <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n         <li><NavLink to='/signin'>Log In</NavLink></li>\r\n      </ul>\r\n\r\n\r\n\r\n\r\n   )\r\n}\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n\r\n        <nav className=\"nav nav-wrapper black darken-3\">\r\n            <div className=\"container\">\r\n\r\n\r\n                <Link to='/' className=\"brand-logo\" >Lucas' Page</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport { Divider } from '@material-ui/core';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-title\">Notifications</div>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(notif => {\r\n                            return (\r\n                                <li key={notif.id}>\r\n                                    <span className=\"teal-text\">{notif.user} </span>\r\n                                    <span>{notif.content} </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notif.time.toDate()).fromNow()}</div>\r\n                                </li>\r\n                            )\r\n                        }\r\n                        )}\r\n\r\n                    </ul>\r\n                    <Divider />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    //console.log(project)\r\n    // const style= {background: linear-gradient (rgba(20, 20, 20, .5),\r\n    //         rgba(20, 20, 20, .5)), url(/img/mario-bg.png)}\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\" >\r\n            <div className=\"card-content grey-text text-darlen-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n\r\n                <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    //console.log({ projects })\r\n    return (\r\n\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notfications from './Notifications'\r\nimport ProjectList from '../Project/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props)\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notfications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        //projects: state.project.projects\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStatetoProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    //const id = props.match.params.id\r\n    const { project, auth } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">\r\n                            {project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted By {project.authorFirstName} {project.authorLastName} </div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProp = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProp),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ]))(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../Store/Actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authErr, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\" >Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\" >Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">LOGIN</button>\r\n                        <div className=\"red-text-center\">\r\n                            {authErr ? <p>{authErr}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProp = (state) => {\r\n    return {\r\n        authErr: state.auth.authErr,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProp, mapDispatchToProps)(SignIn)\r\n","\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../Store/Actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\" >Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\" >Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\" >First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\" >Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SIGN UP</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispachtToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispachtToProps)(SignUp)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../Store/Actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\" >Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\" >Project Content</label>\r\n                        <textarea id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n\r\n    }\r\n}\r\nconst mapStateToProp = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    //WHITHOUT THUNK\r\n    // return {\r\n    //     type: 'ADD_PROJECT',\r\n    //     project: project\r\n    // }\r\n\r\n    return (dispatch, getState, {\r\n        getFirebase,\r\n        getFirestore\r\n    }) => {\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            console.log(project)\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project\r\n            });\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n\r\n    }\r\n}","import React, { Component } from 'react'\nimport Navbar from './Components/Layout/Navbar'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n//import { Switch } from '@material-ui/core'\nimport Dashboard from './Components/Dashboard/Dashboard'\nimport ProjectDetails from './Components/Project/ProjectDetails'\nimport SignIn from './Components/Auth/SignIn'\nimport SignUp from './Components/Auth/SignUp'\nimport CreateProject from './Components/Project/CreateProject'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authErr: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login failed')\r\n            return {\r\n                ...state,\r\n                authErr: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authErr: null\r\n            }\r\n        case 'SIGNOUT_SUCESS':\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authErr: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup faild')\r\n            return {\r\n                ...state,\r\n                authErr: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport default authReducer","const initState = {\r\n    projects: [{\r\n            id: 1,\r\n            title: 'title1',\r\n            content: 'content1'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'title2',\r\n            content: 'content2'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'title3',\r\n            content: 'content3'\r\n        },\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\n\r\nexport default rootReducer\r\n"," import firebase from 'firebase/app'\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n\r\n // Initialize Firebase\r\n var config = {\r\n     apiKey: \"AIzaSyDIBw5nkirnoRDro8r95xm-YLrarYvInPg\",\r\n     authDomain: \"hello-react-a5d0c.firebaseapp.com\",\r\n     databaseURL: \"https://hello-react-a5d0c.firebaseio.com\",\r\n     projectId: \"hello-react-a5d0c\",\r\n     storageBucket: \"hello-react-a5d0c.appspot.com\",\r\n     messagingSenderId: \"581534352133\"\r\n };\r\n firebase.initializeApp(config);\r\n //  firebase.firestore().settings({\r\n //      timestampsInSnapshots: true\r\n //  })\r\n\r\n export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './Store/Reducer/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    ))\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}>< App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}